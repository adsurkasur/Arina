{
  "name": "rest-express",
  "version": "1.0.0",
  "type": "module",
  "license": "MIT",
  "scripts": {
    "dev": "npm run build && npm run copy-env && concurrently --raw \"npm run dev:server\" \"npm run dev:client:wait\"",
    "dev:client": "cd client && npm run dev",
    "dev:server": "cd server && npm run dev:server",
    "build:client": "cd client && npm install && npm run build",
    "build:server": "cd server && npm install && npm run build:server",
    "build": "npm run build:client && npm run build:server",
    "build:ts": "tsc --project ./server/tsconfig.json",
    "start": "cross-env NODE_ENV=production node server/dist/index.js",
    "check": "tsc",
    "db:push": "drizzle-kit push",
    "copy-env:client:win": "powershell -Command \"if (Test-Path .env) { Copy-Item .env client/.env -Force; Write-Host 'Copied .env to client/.env'; } else { Write-Warning '.env not found in root. Skipping copy.' }\"",
    "copy-env:client:unix": "sh -c 'if [ -f .env ]; then cp .env client/.env && echo Copied .env to client/.env; else echo .env not found in root. Skipping copy.; fi'",
    "copy-env:server:win": "powershell -Command \"if (Test-Path .env) { Copy-Item .env server/.env -Force; Write-Host 'Copied .env to server/.env'; } else { Write-Warning '.env not found in root. Skipping copy.' }\"",
    "copy-env:server:unix": "sh -c 'if [ -f .env ]; then cp .env server/.env && echo Copied .env to server/.env; else echo .env not found in root. Skipping copy.; fi'",
    "copy-env:client": "node -e \"process.platform==='win32'?process.exit(require('child_process').spawnSync('npm',['run','copy-env:client:win'],{stdio:'inherit'}).status):process.exit(require('child_process').spawnSync('npm',['run','copy-env:client:unix'],{stdio:'inherit'}).status)\"",
    "copy-env:server": "node -e \"process.platform==='win32'?process.exit(require('child_process').spawnSync('npm',['run','copy-env:server:win'],{stdio:'inherit'}).status):process.exit(require('child_process').spawnSync('npm',['run','copy-env:server:unix'],{stdio:'inherit'}).status)\"",
    "copy-env": "node copy-env.js",
    "install-all": "node install-all.js",
    "predev": "npm run install-all && npm run copy-env",
    "prestart": "npm run install-all",
    "dev:client:wait": "wait-on http-get://localhost:5000/api/health && npm run dev:client"
  },
  "devDependencies": {
    "@types/node": "^20.19.0",
    "concurrently": "^9.1.2",
    "cross-env": "^7.0.3",
    "drizzle-kit": "^0.31.1",
    "typescript": "^5.4.5",
    "vite": "^6.3.5",
    "wait-on": "^8.0.3"
  },
  "dependencies": {
    "drizzle-orm": "^0.44.2",
    "drizzle-zod": "^0.8.2",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "uuid": "^11.1.0"
  },
  "workspaces": [
    "client",
    "server"
  ]
}
